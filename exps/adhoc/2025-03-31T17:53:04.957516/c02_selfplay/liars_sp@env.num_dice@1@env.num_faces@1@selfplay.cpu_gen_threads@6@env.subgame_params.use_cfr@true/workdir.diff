diff --git a/cfvpy/selfplay.py b/cfvpy/selfplay.py
index d1143d1..1376cd1 100644
--- a/cfvpy/selfplay.py
+++ b/cfvpy/selfplay.py
@@ -53,7 +53,8 @@ class CFVExp:
     def __init__(self, cfg):
 
         self.cfg = cfg
-        self.device = cfg.device or "cuda"
+        self.device = "cpu"
+        # self.device = cfg.device or "cuda"
         ckpt_path = "."
         if heyhi.is_on_slurm():
             self.rank = int(os.environ["SLURM_PROCID"])
@@ -284,7 +285,7 @@ class CFVExp:
 
         if self.cfg.benchmark_data_gen:
             # Benchmark generation speed and exit.
-            time.sleep(self.cfg.benchmark_data_gen)
+            time.sleep(self.cfg.benchmark_data_gen / 10)
             context.terminate()
             size = replay.num_add()
             logging.info(
@@ -324,7 +325,7 @@ class CFVExp:
                     policy_replay.size(),
                     burn_in_frames,
                 )
-            time.sleep(30)
+            time.sleep(3)
 
         def compute_gen_bps():
             return (
@@ -402,7 +403,7 @@ class CFVExp:
                         train_size,
                         epoch + 1,
                     )
-                    time.sleep(60)
+                    time.sleep(6)
             assert self.cfg.replay.use_priority is False, "Not supported"
 
             value_loss = policy_loss = 0  # For progress bar.
@@ -478,7 +479,7 @@ class CFVExp:
                     break
             if self.cfg.fake_training:
                 # Fake training epoch takes a minute.
-                time.sleep(60)
+                time.sleep(6)
 
             if len(train_loader) > 0:
                 metrics["bps/train"] = len(train_loader) / (
diff --git a/conf/c02_selfplay/liars_sp.yaml b/conf/c02_selfplay/liars_sp.yaml
index aa99f4c..2c2cc3a 100644
--- a/conf/c02_selfplay/liars_sp.yaml
+++ b/conf/c02_selfplay/liars_sp.yaml
@@ -23,8 +23,8 @@ selfplay:
 train_gen_ratio: 4
 task: selfplay
 loss: huber
-min_buffer_to_send: 2500
-max_epochs: 10000
+min_buffer_to_send: 250
+max_epochs: 100
 model:
   name: Net2
   kwargs:
@@ -33,10 +33,10 @@ model:
     use_layer_norm: true
 create_validation_set_every: 100
 data:
-  train_epoch_size: 25600
-  train_batch_size: 512
+  train_epoch_size: 256
+  train_batch_size: 8
 replay:
-  capacity: 2000000
+  capacity: 2000
   alpha: 1.0
   beta: 1.0
   prefetch: 8
diff --git a/conf/common/launcher/slurm.yaml b/conf/common/launcher/slurm.yaml
index cca03d7..62c3358 100644
--- a/conf/common/launcher/slurm.yaml
+++ b/conf/common/launcher/slurm.yaml
@@ -1,8 +1,8 @@
 launcher:
-  driver: slurm
+  driver: local
   num_gpus: 1
-  cpus_per_gpu: 80
-  hours: 72
-  volta32: false
-  mem_per_gpu: 62
-  single_task_per_node: false
+  cpus_per_gpu: 8
+  # hours: 72
+  # volta32: false
+  # mem_per_gpu: 62
+  # single_task_per_node: false
diff --git a/csrc/liars_dice/real_net.cc b/csrc/liars_dice/real_net.cc
index 4355c2a..b93b7f0 100644
--- a/csrc/liars_dice/real_net.cc
+++ b/csrc/liars_dice/real_net.cc
@@ -128,7 +128,7 @@ std::shared_ptr<IValueNet> create_zero_net(int output_size, bool verbose) {
 }
 
 std::shared_ptr<IValueNet> create_torchscript_net(const std::string& path) {
-  return std::make_shared<TorchScriptNet>(path, "cuda");
+  return std::make_shared<TorchScriptNet>(path, "cpu");
 }
 std::shared_ptr<IValueNet> create_torchscript_net(const std::string& path,
                                                   const std::string& device) {
diff --git a/third_party/pybind11 b/third_party/pybind11
--- a/third_party/pybind11
+++ b/third_party/pybind11
@@ -1 +1 @@
-Subproject commit a1b71df137e015d44f7e31f7b6d4807253fb7871
+Subproject commit a1b71df137e015d44f7e31f7b6d4807253fb7871-dirty
